{"remainingRequest":"/Users/david/Documents/inferus_web/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/david/Documents/inferus_web/src/views/Search.vue?vue&type=template&id=1a1d373c","dependencies":[{"path":"/Users/david/Documents/inferus_web/src/views/Search.vue","mtime":1647329084857},{"path":"/Users/david/Documents/inferus_web/node_modules/cache-loader/dist/cjs.js","mtime":1647312141261},{"path":"/Users/david/Documents/inferus_web/node_modules/babel-loader/lib/index.js","mtime":1647312141744},{"path":"/Users/david/Documents/inferus_web/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1647312142152},{"path":"/Users/david/Documents/inferus_web/node_modules/cache-loader/dist/cjs.js","mtime":1647312141261},{"path":"/Users/david/Documents/inferus_web/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1647312141756}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz0iY29udGFpbmVyIGhvbWUtcm93cyI+CiAgICA8c2VhcmNoLXdyYXBwZXIvPgogIDwvZGl2Pgo="},{"version":3,"sources":["/Users/david/Documents/inferus_web/src/views/Search.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/david/Documents/inferus_web/src/views/Search.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"container home-rows\">\n    <search-wrapper/>\n  </div>\n</template>\n\n<script>\nimport SearchWrapper from \"../components/search/SearchWrapper.vue\"\nimport { useRouter } from \"vue-router\";\n// import { createNamespacedHelpers } from \"vuex-composition-helpers/dist\";\n// import store from \"../store/index\";\n// const { useActions, useState, useGetters } = createNamespacedHelpers(store, \"connect\"); \n// const { connectMetamask, connectWalletConnect} = useActions([\"connectMetamask\",\"autoConnectMetamask\", \"connectWalletConnect\"]);\n// const { getStatus } = useGetters(['getStatus']);\n//import {onMounted} from 'vue'\n\nexport default {\n  name: \"Search\",\n  components: {\n    SearchWrapper\n  },\n  setup() {\n    const router = useRouter();\n     //const { status } = useState(['status']);\n     \n\n    //  onMounted( async() => {\n    //   autoConnectMetamask();\n    //  })\n     return {\n      pushDashboard: () => router.push(\"./dashboard\"),\n    };\n  },\n};\n</script>\n"]}]}